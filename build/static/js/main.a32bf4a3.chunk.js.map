{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","catch","err","error","personId","delete","NotificationMessage","message","type","clsName","className","FilterForm","filter","handleFilterChange","value","onChange","NewPersonForm","newName","newNumber","handleNameChange","handleNumberChange","handleNameSubmission","onSubmit","Persons","persons","handlePersonDeletion","map","person","name","toLowerCase","includes","key","Person","number","onClick","App","useState","setPersons","setNewName","setNewNumber","setFilter","notificationMessage","setNotificationMessage","useEffect","personsService","responseData","clearNotificationMessage","setTimeout","e","preventDefault","target","console","log","allPersons","Error","window","confirm","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a32bf4a3.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n}\n\nconst create = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson);\n  return request\n    .then((response) => ({ response: response.data }))\n    .catch((err) => {\n      return { error: err.response.data.error };\n    });\n}\n\nconst update = (personId, personData) => {\n  const request = axios.put(`${baseUrl}/${personId}`, personData);\n  return request.then((response) => response.data);\n}\n\nconst remove = (personId) => {\n  const request = axios.delete(`${baseUrl}/${personId}`);\n  return request.then((response) => response.data);\n}\n\nexport default { getAll, create, remove, update };","import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\n\nconst NotificationMessage = ({ message, type }) => {\n  let clsName = '';\n\n  if (type === 'success') clsName = 'success-message';\n\n  if (type === 'error') clsName = 'error-message';\n\n  if (!type || !message) return null;\n\n  return (\n    <div className={clsName}>\n      {message}\n    </div>\n  )\n}\n\nconst FilterForm = ({ filter, handleFilterChange }) => (\n  <>\n    <form>\n      <div>\n        filter shown with <input value={filter} onChange={handleFilterChange} />\n      </div>\n    </form>\n  </>\n);\n\nconst NewPersonForm = (\n  { newName, newNumber, handleNameChange, handleNumberChange, handleNameSubmission }\n) => (\n    <>\n      <form onSubmit={handleNameSubmission}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  );\n\nconst Persons = ({ persons, filter, handlePersonDeletion }) => (\n  <>\n    {persons.map((person) => {\n      if (person.name.toLowerCase().includes(filter.toLowerCase())) {\n        return (\n          <Person\n            key={person.name}\n            person={person}\n            handlePersonDeletion={handlePersonDeletion}\n          />\n        );\n      }\n\n      return null;\n    })}\n  </>\n);\n\nconst Person = ({ person, handlePersonDeletion }) => {\n  return (\n    <p>\n      <span>{person.name} {person.number}</span>\n      <button onClick={() => handlePersonDeletion(person)}>delete</button>\n    </p>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [notificationMessage, setNotificationMessage] = useState({ message: '', type: '' })\n\n  useEffect(() => {\n    personsService.getAll().then((responseData) => {\n      setPersons(responseData);\n    });\n  }, []);\n\n  const handleNameChange = (e) => {\n    e.preventDefault();\n    setNewName(e.target.value);\n  }\n\n  const handleNumberChange = (e) => {\n    e.preventDefault();\n    setNewNumber(e.target.value);\n  }\n\n  const handleFilterChange = (e) => {\n    e.preventDefault();\n    setFilter(e.target.value);\n  }\n\n  const fetchAllPersons = () => {\n    personsService.getAll().then((allPersons) => {\n      setPersons(allPersons);\n    });\n  }\n\n  const clearForm = () => {\n    setNewName('');\n    setNewNumber('');\n  }\n\n  const handlePersonSubmission = (e) => {\n    e.preventDefault();\n\n    const person = { name: newName, number: newNumber };\n\n    personsService.create(person)\n      .then((response) => {\n        console.log('response : ', response);\n        if (response.response) {\n          setNotificationMessage({ message: `Updated ${newName}`, type: 'success' });\n          clearForm();\n        } else if (response.error) {\n          setNotificationMessage({ message: response.error, type: 'error' });\n        }\n\n        clearNotificationMessage();\n        fetchAllPersons();\n      })\n      .catch((err) => {\n        setNotificationMessage({ message: err, type: 'error' });\n        clearNotificationMessage();\n      })\n  }\n\n  const handlePersonDeletion = (person) => {\n    if (!person) {\n      throw new Error('person is not valid');\n    }\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personsService.remove(person.id)\n        .then(() => {\n          personsService.getAll().then((responseData) => { setPersons(responseData); })\n        })\n    }\n  }\n\n  const clearNotificationMessage = () => {\n    setTimeout(() => { setNotificationMessage({ message: '', type: '' }); }, 5000);\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <NotificationMessage message={notificationMessage.message} type={notificationMessage.type} />\n\n      <FilterForm filter={filter} handleFilterChange={handleFilterChange} />\n\n      <h2>Add a new</h2>\n\n      <NewPersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleNameSubmission={handlePersonSubmission}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons\n        persons={persons}\n        filter={filter}\n        handlePersonDeletion={handlePersonDeletion}\n      />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}